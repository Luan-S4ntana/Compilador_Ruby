
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORANDleftDIFFDOUBLEEQUALTRIPLEEQUALleftBIGGESTEQUALBIGGESTSMALLSMALLEQUALleftPLUSMINUSleftTIMESDIVIDERESTleftEXPONENleftIDAND BEGIN BIGGEST BIGGESTEQUAL BIGSMALLERESQUAL BREAK BREAKLINE CLASS CLOSEKEY COMMENT DEDENT DEF DIFF DIVIDE DO DOUBLEBAR DOUBLEE DOUBLEEQUAL ELSE ELSIF END EQUAL EXCLAMATION EXPONEN FALSE FOR ID IDENT IF IN LINHA LPAREN LSHIFT MINUS MODULE NIL NOT NUMBER OPENKEY OR PLUS PONTO PONTOEVIRGULA REST RETURN RPAREN RSHIFT SELF SIMPLEBAR SIMPLEE SMALL SMALLEQUAL SUPER THEN TIMES TRIPLEEQUAL TRUE VIRGULA WHILEprogram : funcao programprogram : assign programprogram : assign program : funcaofuncao : DEF ID LPAREN sigParams RPAREN BREAKLINE bodyfuncao : DEF ID BREAKLINE bodystms : stm  \n          |  stm stmsopcional : ELSIF exp THEN body  \n              | ELSE stms END \n              | \n              | ELSIF exp THEN body opcionalbody : stms ENDstm : exp BREAKLINE \n        |   WHILE LPAREN exp RPAREN BREAKLINE body\n  stm : WHILE exp BREAKLINE bodystm : FOR ID IN exp DO BREAKLINE bodystm : FOR ID IN exp BREAKLINE bodystm : IF exp THEN BREAKLINE body opcionalstm : IF exp BREAKLINE body opcionalstm : IF LPAREN exp RPAREN THEN BREAKLINE body opcionalstm : IF LPAREN exp RPAREN BREAKLINE body opcionalstm : RETURN exp BREAKLINEstm : RETURN BREAKLINEexp : exp PLUS expexp : exp EXPONEN expexp : exp MINUS expexp : exp TIMES expexp : exp DIVIDE expexp : exp REST expexp : exp DOUBLEEQUAL expexp : exp TRIPLEEQUAL expexp : exp DIFF expexp : exp BIGGEST expexp : exp BIGGESTEQUAL expexp : exp SMALL expexp : exp SMALLEQUAL expexp : exp OR expexp : exp AND expexp : callexp : assignexp : NUMBERcall : ID LPAREN sigParams RPARENcall : ID LPAREN RPARENcall : IDcall : ID sigParamssigParams :  expsigParams :  exp VIRGULA sigParamsassign : ID EQUAL expstm : assign BREAKLINE'
    
_lr_action_items = {'DEF':([0,2,3,12,13,14,15,16,18,20,30,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,85,86,],[4,4,4,-45,-49,-40,-41,-42,-47,-6,-46,-13,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-43,-5,]),'ID':([0,2,3,4,9,10,11,12,13,14,15,16,18,19,20,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,51,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,84,85,86,88,90,91,93,95,96,97,98,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,],[5,5,5,8,12,12,19,-45,-49,-40,-41,-42,-47,12,-6,19,12,53,12,12,12,-46,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-13,-14,12,12,-24,-50,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,19,-48,19,12,19,-23,-43,-5,-16,19,-11,19,19,-11,-20,12,19,19,-15,19,-18,-19,19,-11,-17,19,-10,-11,-22,-9,-21,-12,]),'$end':([1,2,3,6,7,12,13,14,15,16,18,20,30,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,85,86,],[0,-4,-3,-1,-2,-45,-49,-40,-41,-42,-47,-6,-46,-13,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-43,-5,]),'EQUAL':([5,12,19,],[9,9,9,]),'LPAREN':([8,12,19,24,26,],[10,29,29,51,55,]),'BREAKLINE':([8,12,13,14,15,16,18,19,23,27,28,30,46,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,81,85,87,89,92,94,100,],[11,-45,-49,-40,-41,-42,-47,-45,50,57,58,-46,76,79,82,84,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,90,-43,93,95,101,103,108,]),'NUMBER':([9,10,11,12,19,22,24,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,51,55,57,58,76,79,80,82,84,88,90,91,93,95,96,97,98,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-13,-14,16,16,-24,-50,16,16,16,16,-23,-16,16,-11,16,16,-11,-20,16,16,16,-15,16,-18,-19,16,-11,-17,16,-10,-11,-22,-9,-21,-12,]),'WHILE':([11,22,48,50,57,58,76,79,82,84,88,90,91,93,95,96,97,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,],[24,24,-13,-14,-24,-50,24,24,24,-23,-16,24,-11,24,24,-11,-20,24,24,-15,24,-18,-19,24,-11,-17,24,-10,-11,-22,-9,-21,-12,]),'FOR':([11,22,48,50,57,58,76,79,82,84,88,90,91,93,95,96,97,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,],[25,25,-13,-14,-24,-50,25,25,25,-23,-16,25,-11,25,25,-11,-20,25,25,-15,25,-18,-19,25,-11,-17,25,-10,-11,-22,-9,-21,-12,]),'IF':([11,22,48,50,57,58,76,79,82,84,88,90,91,93,95,96,97,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,],[26,26,-13,-14,-24,-50,26,26,26,-23,-16,26,-11,26,26,-11,-20,26,26,-15,26,-18,-19,26,-11,-17,26,-10,-11,-22,-9,-21,-12,]),'RETURN':([11,22,48,50,57,58,76,79,82,84,88,90,91,93,95,96,97,99,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,],[27,27,-13,-14,-24,-50,27,27,27,-23,-16,27,-11,27,27,-11,-20,27,27,-15,27,-18,-19,27,-11,-17,27,-10,-11,-22,-9,-21,-12,]),'PLUS':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,31,-40,-41,-42,31,-45,31,-41,-46,31,31,31,-44,-25,-26,-27,-28,-29,-30,31,31,31,31,31,31,31,31,31,-48,31,31,-43,31,31,]),'EXPONEN':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,32,-40,-41,-42,32,-45,32,-41,-46,32,32,32,-44,32,-26,32,32,32,32,32,32,32,32,32,32,32,32,32,-48,32,32,-43,32,32,]),'MINUS':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,33,-40,-41,-42,33,-45,33,-41,-46,33,33,33,-44,-25,-26,-27,-28,-29,-30,33,33,33,33,33,33,33,33,33,-48,33,33,-43,33,33,]),'TIMES':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,34,-40,-41,-42,34,-45,34,-41,-46,34,34,34,-44,34,-26,34,-28,-29,-30,34,34,34,34,34,34,34,34,34,-48,34,34,-43,34,34,]),'DIVIDE':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,35,-40,-41,-42,35,-45,35,-41,-46,35,35,35,-44,35,-26,35,-28,-29,-30,35,35,35,35,35,35,35,35,35,-48,35,35,-43,35,35,]),'REST':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,36,-40,-41,-42,36,-45,36,-41,-46,36,36,36,-44,36,-26,36,-28,-29,-30,36,36,36,36,36,36,36,36,36,-48,36,36,-43,36,36,]),'DOUBLEEQUAL':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,37,-40,-41,-42,37,-45,37,-41,-46,37,37,37,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,37,37,-48,37,37,-43,37,37,]),'TRIPLEEQUAL':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,38,-40,-41,-42,38,-45,38,-41,-46,38,38,38,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,38,38,-48,38,38,-43,38,38,]),'DIFF':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,39,-40,-41,-42,39,-45,39,-41,-46,39,39,39,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,39,39,-48,39,39,-43,39,39,]),'BIGGEST':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,40,-40,-41,-42,40,-45,40,-41,-46,40,40,40,-44,-25,-26,-27,-28,-29,-30,40,40,40,-34,-35,-36,-37,40,40,-48,40,40,-43,40,40,]),'BIGGESTEQUAL':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,41,-40,-41,-42,41,-45,41,-41,-46,41,41,41,-44,-25,-26,-27,-28,-29,-30,41,41,41,-34,-35,-36,-37,41,41,-48,41,41,-43,41,41,]),'SMALL':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,42,-40,-41,-42,42,-45,42,-41,-46,42,42,42,-44,-25,-26,-27,-28,-29,-30,42,42,42,-34,-35,-36,-37,42,42,-48,42,42,-43,42,42,]),'SMALLEQUAL':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,43,-40,-41,-42,43,-45,43,-41,-46,43,43,43,-44,-25,-26,-27,-28,-29,-30,43,43,43,-34,-35,-36,-37,43,43,-48,43,43,-43,43,43,]),'OR':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,44,-40,-41,-42,44,-45,44,-41,-46,44,44,44,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,44,44,-43,44,44,]),'AND':([12,13,14,15,16,18,19,23,28,30,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,89,106,],[-45,45,-40,-41,-42,45,-45,45,-41,-46,45,45,45,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,45,45,-43,45,45,]),'VIRGULA':([12,13,14,15,16,18,30,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,85,],[-45,-49,-40,-41,-42,47,-46,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-43,]),'RPAREN':([12,13,14,15,16,17,18,29,30,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,83,85,],[-45,-49,-40,-41,-42,46,-47,60,-46,85,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,87,92,-43,]),'THEN':([12,13,14,15,16,18,30,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,85,92,106,],[-45,-49,-40,-41,-42,-47,-46,81,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-43,100,111,]),'DO':([12,13,14,15,16,18,30,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,85,89,],[-45,-49,-40,-41,-42,-47,-46,-44,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-43,94,]),'END':([21,22,48,49,50,57,58,84,88,91,96,97,102,104,105,107,109,110,112,113,114,115,116,117,],[48,-7,-13,-8,-14,-24,-50,-23,-16,-11,-11,-20,-15,-18,-19,112,-11,-17,-10,-11,-22,-9,-21,-12,]),'ELSIF':([48,91,96,109,113,115,],[-13,98,98,98,98,98,]),'ELSE':([48,91,96,109,113,115,],[-13,99,99,99,99,99,]),'IN':([53,],[80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,6,7,]),'funcao':([0,2,3,],[2,2,2,]),'assign':([0,2,3,9,10,11,12,19,22,24,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,51,55,76,79,80,82,90,93,95,98,99,101,103,108,111,],[3,3,3,15,15,28,15,15,28,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,28,28,15,28,28,28,28,15,28,28,28,28,28,]),'exp':([9,10,11,12,19,22,24,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,51,55,76,79,80,82,90,93,95,98,99,101,103,108,111,],[13,18,23,18,18,23,52,54,56,18,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,18,78,83,23,23,89,23,23,23,23,106,23,23,23,23,23,]),'call':([9,10,11,12,19,22,24,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,51,55,76,79,80,82,90,93,95,98,99,101,103,108,111,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'sigParams':([10,12,19,29,47,],[17,30,30,59,77,]),'body':([11,76,79,82,90,93,95,101,103,108,111,],[20,86,88,91,96,102,104,109,110,113,115,]),'stms':([11,22,76,79,82,90,93,95,99,101,103,108,111,],[21,49,21,21,21,21,21,21,107,21,21,21,21,]),'stm':([11,22,76,79,82,90,93,95,99,101,103,108,111,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'opcional':([91,96,109,113,115,],[97,105,114,116,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funcao program','program',2,'p_program','sintatico.py',15),
  ('program -> assign program','program',2,'p_program_assignProgram','sintatico.py',19),
  ('program -> assign','program',1,'p_program_assign','sintatico.py',23),
  ('program -> funcao','program',1,'p_program_func','sintatico.py',27),
  ('funcao -> DEF ID LPAREN sigParams RPAREN BREAKLINE body','funcao',7,'p_funcao','sintatico.py',31),
  ('funcao -> DEF ID BREAKLINE body','funcao',4,'p_funcao2','sintatico.py',35),
  ('stms -> stm','stms',1,'p_stms','sintatico.py',39),
  ('stms -> stm stms','stms',2,'p_stms','sintatico.py',40),
  ('opcional -> ELSIF exp THEN body','opcional',4,'p_opcional','sintatico.py',47),
  ('opcional -> ELSE stms END','opcional',3,'p_opcional','sintatico.py',48),
  ('opcional -> <empty>','opcional',0,'p_opcional','sintatico.py',49),
  ('opcional -> ELSIF exp THEN body opcional','opcional',5,'p_opcional','sintatico.py',50),
  ('body -> stms END','body',2,'p_body','sintatico.py',61),
  ('stm -> exp BREAKLINE','stm',2,'p_stms_while1','sintatico.py',67),
  ('stm -> WHILE LPAREN exp RPAREN BREAKLINE body','stm',6,'p_stms_while1','sintatico.py',68),
  ('stm -> WHILE exp BREAKLINE body','stm',4,'p_stms_while2','sintatico.py',77),
  ('stm -> FOR ID IN exp DO BREAKLINE body','stm',7,'p_stms_for1','sintatico.py',81),
  ('stm -> FOR ID IN exp BREAKLINE body','stm',6,'p_stms_for2','sintatico.py',85),
  ('stm -> IF exp THEN BREAKLINE body opcional','stm',6,'p_stms_if1','sintatico.py',89),
  ('stm -> IF exp BREAKLINE body opcional','stm',5,'p_smts_if2','sintatico.py',93),
  ('stm -> IF LPAREN exp RPAREN THEN BREAKLINE body opcional','stm',8,'p_stms_if3','sintatico.py',97),
  ('stm -> IF LPAREN exp RPAREN BREAKLINE body opcional','stm',7,'p_stms_if4','sintatico.py',101),
  ('stm -> RETURN exp BREAKLINE','stm',3,'p_stms_return','sintatico.py',105),
  ('stm -> RETURN BREAKLINE','stm',2,'p_stms_return2','sintatico.py',109),
  ('exp -> exp PLUS exp','exp',3,'p_exp_soma','sintatico.py',114),
  ('exp -> exp EXPONEN exp','exp',3,'p_exp_exponen','sintatico.py',118),
  ('exp -> exp MINUS exp','exp',3,'p_exp_subtracao','sintatico.py',122),
  ('exp -> exp TIMES exp','exp',3,'p_exp_multiplicacao','sintatico.py',126),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divisao','sintatico.py',130),
  ('exp -> exp REST exp','exp',3,'p_exp_mod','sintatico.py',134),
  ('exp -> exp DOUBLEEQUAL exp','exp',3,'p_exp_doubleequal','sintatico.py',138),
  ('exp -> exp TRIPLEEQUAL exp','exp',3,'p_exp_tripleequal','sintatico.py',142),
  ('exp -> exp DIFF exp','exp',3,'p_exp_diff','sintatico.py',146),
  ('exp -> exp BIGGEST exp','exp',3,'p_exp_maiorQue','sintatico.py',150),
  ('exp -> exp BIGGESTEQUAL exp','exp',3,'p_exp_maiorQueIgual','sintatico.py',154),
  ('exp -> exp SMALL exp','exp',3,'p_exp_menorQue','sintatico.py',158),
  ('exp -> exp SMALLEQUAL exp','exp',3,'p_exp_menorQueIgual','sintatico.py',162),
  ('exp -> exp OR exp','exp',3,'p_exp_or','sintatico.py',166),
  ('exp -> exp AND exp','exp',3,'p_exp_and','sintatico.py',170),
  ('exp -> call','exp',1,'p_exp_call','sintatico.py',174),
  ('exp -> assign','exp',1,'p_exp_assign','sintatico.py',178),
  ('exp -> NUMBER','exp',1,'p_expNum','sintatico.py',182),
  ('call -> ID LPAREN sigParams RPAREN','call',4,'p_call_complete','sintatico.py',186),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_without_param','sintatico.py',190),
  ('call -> ID','call',1,'p_call_only_id','sintatico.py',194),
  ('call -> ID sigParams','call',2,'p_call_only_id_param','sintatico.py',198),
  ('sigParams -> exp','sigParams',1,'p_sigparams','sintatico.py',202),
  ('sigParams -> exp VIRGULA sigParams','sigParams',3,'p_sigparams1','sintatico.py',206),
  ('assign -> ID EQUAL exp','assign',3,'p_assign','sintatico.py',210),
  ('stm -> assign BREAKLINE','stm',2,'p_assign_break','sintatico.py',214),
]
