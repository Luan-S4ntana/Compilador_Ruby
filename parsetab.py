
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORANDleftDIFFDOUBLEEQUALTRIPLEEQUALleftBIGGESTEQUALBIGGESTSMALLSMALLEQUALleftPLUSMINUSleftTIMESDIVIDERESTleftEXPONENAND BEGIN BIGGEST BIGGESTEQUAL BIGSMALLERESQUAL BREAK CLASS CLOSEKEY COMMENT DEDENT DEF DIFF DIVIDE DO DOUBLEBAR DOUBLEE DOUBLEEQUAL ELSE ELSIF END EQUAL EXCLAMATION EXPONEN FALSE FOR ID IDENT IF IN LINHA LPAREN LSHIFT MINUS MODULE NIL NOT NUMBER OPENKEY OR PLUS PONTO PONTOEVIRGULA REST RETURN RPAREN RSHIFT SELF SIMPLEBAR SIMPLEE SMALL SMALLEQUAL SUPER THEN TIMES TRIPLEEQUAL TRUE VIRGULA WHILEprogram : funcao programprogram : IDprogram : assign program : funcaofuncao : DEF ID LPAREN sigParams RPAREN stms ENDstms : stm  \n          |  stm stmsopcional : ELSIF exp THEN stms END  \n              |  ELSE stms END \n              |  stm : exp \n        |   WHILE LPAREN exp RPAREN stms END\n  stm : WHILE exp stms END stm : FOR ID IN exp DO stms END stm : FOR ID IN exp stms ENDstm : IF exp THEN stms END opcionalstm : IF exp stms END opcionalstm : IF LPAREN exp RPAREN THEN stms END opcionalstm : IF LPAREN exp RPAREN stms END opcionalstm : RETURN expexp : exp PLUS expexp : exp EXPONEN expexp : exp MINUS expexp : exp TIMES expexp : exp DIVIDE expexp : exp REST expexp : exp DOUBLEEQUAL expexp : exp TRIPLEEQUAL expexp : exp DIFF expexp : exp BIGGEST expexp : exp BIGGESTEQUAL expexp : exp SMALL expexp : exp SMALLEQUAL expexp : exp OR expexp : exp AND expexp : exp EXCLAMATION  expexp : callexp : assignexp : IDcall : ID LPAREN sigParams RPARENcall : ID LPAREN RPARENcall : IDcall : ID sigParamssigParams :  expsigParams :  exp VIRGULA sigParamsassign : ID EQUAL exp'
    
_lr_action_items = {'ID':([0,2,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,68,69,70,73,74,77,78,79,81,82,84,86,87,88,89,90,92,94,95,99,100,101,102,103,104,106,107,],[3,3,8,9,9,-46,-37,-38,9,9,-43,-44,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-41,9,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,9,-40,-45,9,-11,9,67,9,9,-5,9,9,9,9,-20,9,9,9,-13,9,-10,9,9,-10,-17,9,9,9,-12,-15,-16,-10,-14,9,-9,-10,-19,-18,-8,]),'DEF':([0,2,63,],[5,5,-5,]),'$end':([1,2,3,4,6,9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,63,],[0,-4,-2,-3,-1,-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-40,-45,-5,]),'EQUAL':([3,9,],[7,7,]),'LPAREN':([8,9,59,61,],[13,14,65,69,]),'PLUS':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,17,-37,-38,-43,17,-41,-21,-22,-23,-24,-25,-26,17,17,17,17,17,17,17,17,17,17,-40,-45,17,17,17,17,17,17,17,17,]),'EXPONEN':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,18,-37,-38,-43,18,-41,18,-22,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-40,-45,18,18,18,18,18,18,18,18,]),'MINUS':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,19,-37,-38,-43,19,-41,-21,-22,-23,-24,-25,-26,19,19,19,19,19,19,19,19,19,19,-40,-45,19,19,19,19,19,19,19,19,]),'TIMES':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,20,-37,-38,-43,20,-41,20,-22,20,-24,-25,-26,20,20,20,20,20,20,20,20,20,20,-40,-45,20,20,20,20,20,20,20,20,]),'DIVIDE':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,21,-37,-38,-43,21,-41,21,-22,21,-24,-25,-26,21,21,21,21,21,21,21,21,21,21,-40,-45,21,21,21,21,21,21,21,21,]),'REST':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,22,-37,-38,-43,22,-41,22,-22,22,-24,-25,-26,22,22,22,22,22,22,22,22,22,22,-40,-45,22,22,22,22,22,22,22,22,]),'DOUBLEEQUAL':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,23,-37,-38,-43,23,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,23,23,23,-40,-45,23,23,23,23,23,23,23,23,]),'TRIPLEEQUAL':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,24,-37,-38,-43,24,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,24,24,24,-40,-45,24,24,24,24,24,24,24,24,]),'DIFF':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,25,-37,-38,-43,25,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,25,25,25,-40,-45,25,25,25,25,25,25,25,25,]),'BIGGEST':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,26,-37,-38,-43,26,-41,-21,-22,-23,-24,-25,-26,26,26,26,-30,-31,-32,-33,26,26,26,-40,-45,26,26,26,26,26,26,26,26,]),'BIGGESTEQUAL':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,27,-37,-38,-43,27,-41,-21,-22,-23,-24,-25,-26,27,27,27,-30,-31,-32,-33,27,27,27,-40,-45,27,27,27,27,27,27,27,27,]),'SMALL':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,28,-37,-38,-43,28,-41,-21,-22,-23,-24,-25,-26,28,28,28,-30,-31,-32,-33,28,28,28,-40,-45,28,28,28,28,28,28,28,28,]),'SMALLEQUAL':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,29,-37,-38,-43,29,-41,-21,-22,-23,-24,-25,-26,29,29,29,-30,-31,-32,-33,29,29,29,-40,-45,29,29,29,29,29,29,29,29,]),'OR':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,30,-37,-38,-43,30,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,30,-40,-45,30,30,30,30,30,30,30,30,]),'AND':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,31,-37,-38,-43,31,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,31,-40,-45,31,31,31,31,31,31,31,31,]),'EXCLAMATION':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,66,68,70,71,76,79,96,],[-39,32,-37,-38,-43,32,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,32,-40,-45,32,32,32,32,32,32,32,32,]),'VIRGULA':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,],[-39,-46,-37,-38,-43,36,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-40,-45,]),'RPAREN':([9,10,11,12,14,15,16,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,71,76,],[-39,-46,-37,-38,35,-43,-44,53,54,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-40,-45,77,82,]),'WHILE':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,66,68,70,74,77,78,79,81,82,84,86,87,89,90,92,94,95,99,100,101,102,103,104,106,107,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,59,-40,-45,59,-11,59,59,-20,59,59,-13,59,-10,59,59,-10,-17,59,59,-12,-15,-16,-10,-14,59,-9,-10,-19,-18,-8,]),'FOR':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,66,68,70,74,77,78,79,81,82,84,86,87,89,90,92,94,95,99,100,101,102,103,104,106,107,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,60,-40,-45,60,-11,60,60,-20,60,60,-13,60,-10,60,60,-10,-17,60,60,-12,-15,-16,-10,-14,60,-9,-10,-19,-18,-8,]),'IF':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,66,68,70,74,77,78,79,81,82,84,86,87,89,90,92,94,95,99,100,101,102,103,104,106,107,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,61,-40,-45,61,-11,61,61,-20,61,61,-13,61,-10,61,61,-10,-17,61,61,-12,-15,-16,-10,-14,61,-9,-10,-19,-18,-8,]),'RETURN':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,66,68,70,74,77,78,79,81,82,84,86,87,89,90,92,94,95,99,100,101,102,103,104,106,107,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,62,-40,-45,62,-11,62,62,-20,62,62,-13,62,-10,62,62,-10,-17,62,62,-12,-15,-16,-10,-14,62,-9,-10,-19,-18,-8,]),'END':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,64,70,72,75,78,80,81,83,85,86,87,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-40,-45,63,-6,-11,-7,-20,78,81,-13,86,-10,92,94,-10,-17,99,-12,100,-15,-16,102,103,-10,-14,-9,-10,-19,107,-18,-8,]),'THEN':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,68,82,96,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-40,-45,74,90,101,]),'DO':([9,10,11,12,15,16,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,79,],[-39,-46,-37,-38,-43,-44,-41,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-40,-45,84,]),'IN':([67,],[73,]),'ELSIF':([81,86,99,103,],[88,88,88,88,]),'ELSE':([81,86,99,103,],[89,89,89,89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,6,]),'funcao':([0,2,],[2,2,]),'assign':([0,2,7,9,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,53,57,59,61,62,65,66,68,69,73,74,77,79,82,84,88,89,90,101,],[4,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'exp':([7,9,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,53,57,59,61,62,65,66,68,69,73,74,77,79,82,84,88,89,90,101,],[10,16,16,16,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,16,58,58,66,68,70,71,58,58,76,79,58,58,58,58,58,96,58,58,58,]),'call':([7,9,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,53,57,59,61,62,65,66,68,69,73,74,77,79,82,84,88,89,90,101,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'sigParams':([9,13,14,36,],[15,33,34,55,]),'stms':([53,57,66,68,74,77,79,82,84,89,90,101,],[56,64,72,75,80,83,85,91,93,97,98,105,]),'stm':([53,57,66,68,74,77,79,82,84,89,90,101,],[57,57,57,57,57,57,57,57,57,57,57,57,]),'opcional':([81,86,99,103,],[87,95,104,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funcao program','program',2,'p_program','sintatico.py',14),
  ('program -> ID','program',1,'p_program_ID','sintatico.py',17),
  ('program -> assign','program',1,'p_program_assign','sintatico.py',21),
  ('program -> funcao','program',1,'p_program_func','sintatico.py',25),
  ('funcao -> DEF ID LPAREN sigParams RPAREN stms END','funcao',7,'p_funcao','sintatico.py',28),
  ('stms -> stm','stms',1,'p_stms','sintatico.py',32),
  ('stms -> stm stms','stms',2,'p_stms','sintatico.py',33),
  ('opcional -> ELSIF exp THEN stms END','opcional',5,'p_opcional','sintatico.py',37),
  ('opcional -> ELSE stms END','opcional',3,'p_opcional','sintatico.py',38),
  ('opcional -> <empty>','opcional',0,'p_opcional','sintatico.py',39),
  ('stm -> exp','stm',1,'p_stms_while1','sintatico.py',42),
  ('stm -> WHILE LPAREN exp RPAREN stms END','stm',6,'p_stms_while1','sintatico.py',43),
  ('stm -> WHILE exp stms END','stm',4,'p_stms_while2','sintatico.py',48),
  ('stm -> FOR ID IN exp DO stms END','stm',7,'p_stms_for1','sintatico.py',52),
  ('stm -> FOR ID IN exp stms END','stm',6,'p_stms_for2','sintatico.py',56),
  ('stm -> IF exp THEN stms END opcional','stm',6,'p_stms_if1','sintatico.py',60),
  ('stm -> IF exp stms END opcional','stm',5,'p_smts_if2','sintatico.py',64),
  ('stm -> IF LPAREN exp RPAREN THEN stms END opcional','stm',8,'p_stms_if3','sintatico.py',68),
  ('stm -> IF LPAREN exp RPAREN stms END opcional','stm',7,'p_stms_if4','sintatico.py',72),
  ('stm -> RETURN exp','stm',2,'p_stms_return','sintatico.py',76),
  ('exp -> exp PLUS exp','exp',3,'p_exp_soma','sintatico.py',80),
  ('exp -> exp EXPONEN exp','exp',3,'p_exp_exponen','sintatico.py',84),
  ('exp -> exp MINUS exp','exp',3,'p_exp_subtracao','sintatico.py',88),
  ('exp -> exp TIMES exp','exp',3,'p_exp_multiplicacao','sintatico.py',92),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divisao','sintatico.py',96),
  ('exp -> exp REST exp','exp',3,'p_exp_mod','sintatico.py',100),
  ('exp -> exp DOUBLEEQUAL exp','exp',3,'p_exp_doubleequal','sintatico.py',104),
  ('exp -> exp TRIPLEEQUAL exp','exp',3,'p_exp_tripleequal','sintatico.py',108),
  ('exp -> exp DIFF exp','exp',3,'p_exp_diff','sintatico.py',112),
  ('exp -> exp BIGGEST exp','exp',3,'p_exp_maiorQue','sintatico.py',116),
  ('exp -> exp BIGGESTEQUAL exp','exp',3,'p_exp_maiorQueIgual','sintatico.py',120),
  ('exp -> exp SMALL exp','exp',3,'p_exp_menorQue','sintatico.py',124),
  ('exp -> exp SMALLEQUAL exp','exp',3,'p_exp_menorQueIgual','sintatico.py',128),
  ('exp -> exp OR exp','exp',3,'p_exp_or','sintatico.py',132),
  ('exp -> exp AND exp','exp',3,'p_exp_and','sintatico.py',136),
  ('exp -> exp EXCLAMATION exp','exp',3,'p_exp_negative','sintatico.py',140),
  ('exp -> call','exp',1,'p_exp_call','sintatico.py',144),
  ('exp -> assign','exp',1,'p_exp_assign','sintatico.py',148),
  ('exp -> ID','exp',1,'p_exp_ID','sintatico.py',152),
  ('call -> ID LPAREN sigParams RPAREN','call',4,'p_call_complete','sintatico.py',156),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_without_param','sintatico.py',160),
  ('call -> ID','call',1,'p_call_only_id','sintatico.py',164),
  ('call -> ID sigParams','call',2,'p_call_only_id_param','sintatico.py',168),
  ('sigParams -> exp','sigParams',1,'p_sigparams','sintatico.py',172),
  ('sigParams -> exp VIRGULA sigParams','sigParams',3,'p_sigparams1','sintatico.py',176),
  ('assign -> ID EQUAL exp','assign',3,'p_assign','sintatico.py',180),
]
